// <auto-generated />
using System;
using Grajciar.InternetBanking.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Grajciar.InternetBanking.Infrastructure.Migrations
{
    [DbContext(typeof(InternetBankingDbContext))]
    [Migration("20251025153246_types_update")]
    partial class types_update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Grajciar.InternetBanking.Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("UserId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = "123456789",
                            Balance = 1000m,
                            BankId = 1,
                            CreatedAt = new DateTime(2025, 10, 25, 15, 32, 46, 289, DateTimeKind.Utc).AddTicks(3817),
                            Type = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AccountNumber = "321654987",
                            Balance = 500m,
                            BankId = 2,
                            CreatedAt = new DateTime(2025, 10, 25, 15, 32, 46, 289, DateTimeKind.Utc).AddTicks(4270),
                            Type = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            AccountNumber = "987654321",
                            Balance = 2000m,
                            BankId = 3,
                            CreatedAt = new DateTime(2025, 10, 25, 15, 32, 46, 289, DateTimeKind.Utc).AddTicks(4272),
                            Type = 2,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Grajciar.InternetBanking.Domain.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SwiftCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Masarykova XYZ, Brno",
                            BankCode = "0001",
                            Name = "Banka 1",
                            SwiftCode = "BANK1CZ"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Masarykova XYZ, Brno",
                            BankCode = "0020",
                            Name = "Banka 2",
                            SwiftCode = "BANK2CZ"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Masarykova XYZ, Brno",
                            BankCode = "0300",
                            Name = "Banka 3",
                            SwiftCode = "BANK3CZ"
                        });
                });

            modelBuilder.Entity("Grajciar.InternetBanking.Domain.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Card");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            CardHolderName = "Petr Grajciar",
                            CardNumber = "0123456789012345",
                            CreatedAt = new DateTime(2025, 10, 25, 15, 32, 46, 289, DateTimeKind.Utc).AddTicks(7986),
                            ExpirationDate = new DateTime(2026, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBlocked = false,
                            SecurityCode = "123",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 2,
                            CardHolderName = "Karel Chleba",
                            CardNumber = "1234951274563654",
                            CreatedAt = new DateTime(2025, 10, 25, 15, 32, 46, 289, DateTimeKind.Utc).AddTicks(8122),
                            ExpirationDate = new DateTime(2027, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBlocked = false,
                            SecurityCode = "213",
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 3,
                            CardHolderName = "Šimon Rohlík",
                            CardNumber = "1478852365891452",
                            CreatedAt = new DateTime(2025, 10, 25, 15, 32, 46, 289, DateTimeKind.Utc).AddTicks(8123),
                            ExpirationDate = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBlocked = false,
                            SecurityCode = "231",
                            Type = 0
                        });
                });

            modelBuilder.Entity("Grajciar.InternetBanking.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ConstantSymbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FromAccountNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FromBankCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("ToAccountNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ToBankCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<string>("VariableSymbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Grajciar.InternetBanking.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 25, 15, 32, 46, 288, DateTimeKind.Utc).AddTicks(2393),
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "petrgrajciar@test.cz",
                            FirstName = "Petr",
                            LastName = "Grajciar",
                            PasswordHash = "hashedpassword123",
                            Tel = "+420123456789",
                            UserType = 0,
                            Username = "petrgrajciar"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 25, 15, 32, 46, 288, DateTimeKind.Utc).AddTicks(3639),
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "karelchleba@test.cz",
                            FirstName = "Karel",
                            LastName = "Chleba",
                            PasswordHash = "hashedpassword123",
                            Tel = "+420123456789",
                            UserType = 0,
                            Username = "karel"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 25, 15, 32, 46, 288, DateTimeKind.Utc).AddTicks(3642),
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "simonrohlik@test.cz",
                            FirstName = "Šimon",
                            LastName = "Rohlík",
                            PasswordHash = "hashedpassword123",
                            Tel = "+420123456789",
                            UserType = 0,
                            Username = "simon"
                        });
                });

            modelBuilder.Entity("Grajciar.InternetBanking.Domain.Entities.Account", b =>
                {
                    b.HasOne("Grajciar.InternetBanking.Domain.Entities.Bank", "Bank")
                        .WithMany("Accounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Grajciar.InternetBanking.Domain.Entities.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Grajciar.InternetBanking.Domain.Entities.Card", b =>
                {
                    b.HasOne("Grajciar.InternetBanking.Domain.Entities.Account", "Account")
                        .WithMany("Cards")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Grajciar.InternetBanking.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("Grajciar.InternetBanking.Domain.Entities.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Grajciar.InternetBanking.Domain.Entities.Account", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Grajciar.InternetBanking.Domain.Entities.Bank", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Grajciar.InternetBanking.Domain.Entities.User", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
